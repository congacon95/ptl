<UserControl x:Class="PTL.View.MainWindow.Mouse"
						 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
						 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
						 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
						 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
						 xmlns:local="clr-namespace:PTL.View.MainWindow"
						 mc:Ignorable="d"
						 d:DesignHeight="800"
						 d:DesignWidth="300">
	<StackPanel>
		<ToggleButton x:Name="chb_drag"
									Content="MOUSE INPUT"></ToggleButton>
		<Border>
			<StackPanel Visibility="{Binding IsChecked, ElementName=chb_drag, Converter={StaticResource b2v}}">
				<CheckBox IsChecked="{Binding st.IsDrag}"
									Content="{Binding l.IsDrag, FallbackValue='Drag anywhere to move window'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsDragPreview}"
									Content="{Binding l.IsDragPreview, FallbackValue='Preview window for mouse-drag'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsCorner}"
									Content="{Binding l.IsCorner, FallbackValue='Drag to corner to activate resizing'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsCornerPreview}"
									Content="{Binding l.IsCornerPreview, FallbackValue='Preview window for mouse-corner'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsXButton}"
									Content="{Binding l.IsXButton, FallbackValue='Use X1BUTTON to close window'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsXButton}"
									Content="{Binding l.IsXButton, FallbackValue='Use X2BUTTON to close window'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsMinimize}"
									Content="{Binding l.IsMinimize, FallbackValue='Minimize window instead closing'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsConfirm}"
									Content="{Binding l.IsConfirm, FallbackValue='Ask before closing window'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsScroll_SwitchScreen}"
									Content="{Binding l.IsScroll_SwitchScreen, FallbackValue='Hold Shift + Scroll to switch screen'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsScroll_AddWidth}"
									Content="{Binding l.IsScroll_AddWidth, FallbackValue='Hold RButton + Scroll to change width'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsScroll_Volume}"
									Content="{Binding l.IsScroll_Volume, FallbackValue='Scroll on taskbar to change volume'}"></CheckBox>
				<Button Command="{Binding st.RESET_VOLUME_STEP}"
								Visibility="{Binding st.IsScroll_Volume, Converter={StaticResource b2v}}">
					<TextBlock>
					<Run Text="Volume Step: " />
					<Run Text="{Binding st.Volume_Step, Converter={StaticResource mul}, ConverterParameter=2, FallbackValue=2}" />
					<Run Text="/ scroll" /></TextBlock>
				</Button>
				<Slider Value="{Binding st.Volume_Step, FallbackValue=1}"
								Visibility="{Binding st.IsScroll_Volume, Converter={StaticResource b2v}}"
								Maximum="5"
								Minimum="-5"></Slider>
				<Button>
					<TextBlock>
						<Run Text="Click count:" />
						<Run Text="{Binding st.Counter}" />
					</TextBlock>
				</Button>
			</StackPanel>
		</Border>
		<!--<ToggleButton x:Name="chb_drag"
									Content="MOUSE-DRAG TO MOVE"></ToggleButton>
		<Border>
			<StackPanel Visibility="{Binding IsChecked, ElementName=chb_drag, Converter={StaticResource b2v}}">
				<CheckBox IsChecked="{Binding st.IsDrag}"
									Content="{Binding l.IsDrag, FallbackValue='Drag to move window'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsShowOverlay}"
									Content="{Binding l.IsShowOverlay, FallbackValue='Show overlay window'}"></CheckBox>
				<Button Command="{Binding st.RESET_DRAG_DISTANCE}">
					<TextBlock>
				<Run Text="Drag Distance: " />
				<Run Text="{Binding st.Drag_Distance, FallbackValue=0}" />
				<Run Text="px" /></TextBlock>
				</Button>
				<Slider Value="{Binding st.Drag_Distance, FallbackValue=0}"
								Maximum="50"
								LargeChange="5"></Slider>
			</StackPanel>
		</Border>-->
		<!--<ToggleButton x:Name="chb_corner"
									Content="MOUSE-DRAG TO CORNER"></ToggleButton>
		<Border>
			<StackPanel Visibility="{Binding IsChecked, ElementName=chb_corner, Converter={StaticResource b2v}}">
				<CheckBox IsChecked="{Binding st.IsCorner}"
									Content="{Binding l.IsCorner, FallbackValue='Active screen corner'}"></CheckBox>
				<Button Command="{Binding st.RESET_CORNER_DISTANCE}">
					<TextBlock>
				<Run Text="Corner Distance: " /> 
				<Run Text="{Binding st.Corner_Distance, FallbackValue=20}" />
				<Run Text="px" /></TextBlock>
				</Button>
				<Slider Value="{Binding st.Corner_Distance, FallbackValue=20}"></Slider>
				<Button Command="{Binding st.RESET_CORNER_SENSITIVE}">
					<TextBlock>
				<Run Text="Corner Delay: " /> 
				<Run Text="{Binding st.Corner_Sensitive, Converter={StaticResource mul}, ConverterParameter=10, FallbackValue=50}" />
				<Run Text="ms" /></TextBlock>
				</Button>
				<Slider Value="{Binding st.Corner_Sensitive,FallbackValue=2}"></Slider>
			</StackPanel>
		</Border>-->
		<!--<ToggleButton x:Name="chb_wheel"
									Content="MOUSE-WHEEL"></ToggleButton>
		<Border>
			<StackPanel Visibility="{Binding IsChecked, ElementName=chb_wheel, Converter={StaticResource b2v}}">
				<CheckBox IsChecked="{Binding st.IsWheel}"
									Content="{Binding l.IsWheel, FallbackValue='Scroll on taskbar to change volume'}"></CheckBox>
				<Button Command="{Binding st.RESET_VOLUME_STEP}">
					<TextBlock>
				<Run Text="Volume Step: " />
				<Run Text="{Binding st.Volume_Step, Converter={StaticResource mul}, ConverterParameter=2, FallbackValue=2}" />
				<Run Text="/ scroll" /></TextBlock>
				</Button>
				<Slider Value="{Binding st.Volume_Step, FallbackValue=1}"
								Maximum="5"
								Minimum="-5"></Slider>
			</StackPanel>
		</Border>-->
		<!--<ToggleButton x:Name="chb_xbtn"
									Content="MOUSE-XBUTTON"></ToggleButton>
		<Border>
			<StackPanel Visibility="{Binding IsChecked, ElementName=chb_xbtn, Converter={StaticResource b2v}}">
				<CheckBox IsChecked="{Binding st.IsXButton}"
									Content="{Binding l.IsXButton, FallbackValue='X1 button close window'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsMinimize}"
									Content="{Binding l.IsMinimize, FallbackValue='Minimize window instead'}"></CheckBox>
				<CheckBox IsChecked="{Binding st.IsConfirm}"
									Content="{Binding l.IsConfirm, FallbackValue='Ask before closing window'}"></CheckBox>
			</StackPanel>
		</Border>-->
	</StackPanel>
</UserControl>
