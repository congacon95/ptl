<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
										xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
										xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
										xmlns:local="clr-namespace:PTL.View.Sytle"
										xmlns:converters="clr-namespace:PTL.ViewModel.Utility"
										xmlns:sys="clr-namespace:System;assembly=mscorlib">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/PTL;component/View/Style/Buttons.xaml"></ResourceDictionary>
	</ResourceDictionary.MergedDictionaries>
	<converters:Add x:Key="Add" />
	<converters:BooleanToVisibility x:Key="b2v" />
	<converters:Multiply x:Key="mul" />
	<converters:SubtractBy x:Key="subby" />
	<converters:NotNotNot x:Key="not" />
	<converters:Subtract x:Key="sub" />
	<converters:DivideByFactor x:Key="divby" />
	<converters:MultiMarginConverter x:Key="MultiMarginConverter" />
	<converters:AddAll x:Key="AddAll" />
	<Duration x:Key="animationTimeFast">0:0:0.2</Duration>
	<Duration x:Key="animationTimeNormal">0:0:0.3</Duration>
	<Duration x:Key="animationTimeSlow">0:0:0.4</Duration>
	<TransformGroup x:Key="Rotate180">
		<ScaleTransform />
		<SkewTransform />
		<RotateTransform Angle="180" />
		<TranslateTransform />
	</TransformGroup>
	<TransformGroup x:Key="Rotate90">
		<ScaleTransform />
		<SkewTransform />
		<RotateTransform Angle="90" />
		<TranslateTransform />
	</TransformGroup>
	<TransformGroup x:Key="Rotate270">
		<ScaleTransform />
		<SkewTransform />
		<RotateTransform Angle="270" />
		<TranslateTransform />
	</TransformGroup>
	<TransformGroup x:Key="Rotate45">
		<ScaleTransform />
		<SkewTransform />
		<RotateTransform Angle="45" />
		<TranslateTransform />
	</TransformGroup>
	<Style x:Key="BaseStyle"
				 TargetType="{x:Type Control}">
		<Setter Property="MinHeight"
						Value="32" />
		<Setter Property="Background"
						Value="{StaticResource DisableBackground}" />
		<Setter Property="Foreground"
						Value="{StaticResource EnableBrush}" />
		<Setter Property="BorderBrush"
						Value="{StaticResource DisableBrush}" />
		<Setter Property="Effect"
						Value="{StaticResource dropBlack}" />
		<Setter Property="SnapsToDevicePixels"
						Value="True" />
		<Setter Property="ToolTip.Placement"
						Value="Top" />
		<Setter Property="ToolTipService.InitialShowDelay"
						Value="500"></Setter>
		<Setter Property="FontFamily"
						Value="Segoe UI" />
		<Setter Property="FontSize"
						Value="18" />
		<Setter Property="BorderThickness"
						Value="1.5" />
		<Setter Property="TextBlock.TextWrapping"
						Value="Wrap" />
		<Setter Property="TextBlock.TextAlignment"
						Value="Center" />
	</Style>
	<Style x:Key="tb_content"
				 TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping"
						Value="WrapWithOverflow" />
		<Setter Property="FontSize"
						Value="18" />
		<Setter Property="MinWidth"
						Value="60" />
		<Setter Property="Height"
						Value="32" />
		<Setter Property="Padding"
						Value="0,2" />
		<Setter Property="HorizontalAlignment"
						Value="Center" />
		<Setter Property="Background"
						Value="{StaticResource DisableBackground}" />
		<Setter Property="Foreground"
						Value="{StaticResource EnableBrush}" />
	</Style>
	<Style x:Key="bd_round"
				 TargetType="{x:Type Border}">
		<Setter Property="Margin"
						Value="0,0,0,0" />
		<Setter Property="CornerRadius"
						Value="0" />
		<Setter Property="Background"
						Value="{StaticResource DisableBackground}" />
	</Style>
	<Style x:Name="chb_nav"
				 TargetType="{x:Type CheckBox}"
				 BasedOn="{StaticResource BaseStyle}">
		<Style.Triggers>
			<Trigger Property="IsChecked"
							 Value="True">
				<Setter Property="Background"
								Value="{StaticResource EnableBackground}"></Setter>
				<Setter Property="Effect"
								Value="{StaticResource dropBlue}"></Setter>
			</Trigger>
			<Trigger Property="IsChecked"
							 Value="False">
				<Setter Property="Foreground"
								Value="{StaticResource DisableBrush}"></Setter>
				<Setter Property="Background"
								Value="{StaticResource DisableBackground}"></Setter>
				<Setter Property="Effect"
								Value="{StaticResource dropBlack}"></Setter>
			</Trigger>
			<Trigger Property="IsMouseOver"
							 Value="True">
				<Setter Property="Foreground"
								Value="{StaticResource EnableBrush}"></Setter>
				<Setter Property="Background"
								Value="{StaticResource dark24}"></Setter>
			</Trigger>
			<Trigger Property="IsPressed"
							 Value="true">
				<Setter Property="Background"
								Value="{StaticResource dark24}" />
				<Setter Property="Effect"
								Value="{StaticResource dropBlack}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="tb_ruleList"
				 TargetType="{x:Type TextBox}"
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="MinWidth"
						Value="50" />
		<Setter Property="Background"
						Value="{StaticResource dark24}" />
		<Setter Property="Effect"
						Value="{StaticResource dropBlack}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
							 Value="true">
				<Setter Property="Effect"
								Value="{StaticResource dropBlue}" />
				<Setter Property="Foreground"
								Value="{StaticResource EnableBrush}" />
				<Setter Property="BorderBrush"
								Value="{StaticResource EnableBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="chb_nav"
				 TargetType="{x:Type CheckBox}"
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Width"
						Value="50"></Setter>
		<Style.Triggers>
			<Trigger Property="IsChecked"
							 Value="True">
				<Setter Property="Foreground"
								Value="{StaticResource EnableBrush}"></Setter>
				<Setter Property="Background"
								Value="{StaticResource dark24}"></Setter>
			</Trigger>
			<Trigger Property="IsChecked"
							 Value="False">
				<Setter Property="Foreground"
								Value="{StaticResource DisableBrush}"></Setter>
				<Setter Property="Effect"
								Value="{StaticResource dropBlack}"></Setter>
			</Trigger>
			<Trigger Property="IsMouseOver"
							 Value="True">
				<Setter Property="Foreground"
								Value="{StaticResource EnableBrush}"></Setter>
				<Setter Property="Effect"
								Value="{StaticResource dropBlue}"></Setter>
				<Setter Property="Background"
								Value="{StaticResource dark24}"></Setter>
			</Trigger>
			<Trigger Property="IsPressed"
							 Value="True">
				<Setter Property="Effect"
								Value="{StaticResource dropBlack}"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="chb_cornerSetup"
				 TargetType="{x:Type CheckBox}"
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="MinHeight"
						Value="0"></Setter>
		<Setter Property="Background"
						Value="{StaticResource dark24}"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Border x:Name="outerBorder"
									Width="{TemplateBinding Width}"
									Height="{TemplateBinding Height}"
									BorderBrush="{TemplateBinding BorderBrush}"
									Background="{TemplateBinding Background}"
									Padding="3"
									Margin="0"
									BorderThickness="1">
						<Border Background="{TemplateBinding BorderBrush}"
										Opacity="{TemplateBinding Opacity}"
										CornerRadius="0"></Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
										 Value="False">
							<Setter Property="Opacity"
											Value="0.8" />
						</Trigger>
						<Trigger Property="IsChecked"
										 Value="True">
							<Setter Property="Opacity"
											Value="1" />
							<Setter Property="Effect"
						Value="{StaticResource dropBlue}"></Setter>
							<Setter Property="BorderBrush"
											Value="{StaticResource EnableBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter Property="Opacity"
											Value="1" />
							<Setter Property="Effect"
						Value="{StaticResource dropBlue}"></Setter>
							<Setter Property="BorderBrush"
											Value="{StaticResource EnableBrush}" />
						</Trigger>
						<Trigger  Property="IsPressed"
											Value="True">
							<Setter Property="Effect"
						Value="{StaticResource dropBlack}"></Setter>
							<Setter Property="Opacity"
											Value="0.9" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="tgb_menu"
				 TargetType="{x:Type ToggleButton}"
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="IsChecked"
						Value="True"></Setter>
		<Setter Property="FontSize"
						Value="26"></Setter>
		<Setter Property="FontFamily"
						Value="Bold"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Border BorderBrush="{TemplateBinding Foreground}"
										Background="{TemplateBinding Background}"
										BorderThickness="1"
										CornerRadius="16">
						</Border>
						<ContentPresenter Content="{TemplateBinding Content}"
															Margin="0,1,0,-1"
															VerticalAlignment="Center"></ContentPresenter>
						<Control Template="{StaticResource btn_Up}"
										 RenderTransformOrigin="0.5,0.5"
										 HorizontalAlignment="Right">
							<Control.RenderTransform>
								<TransformGroup>
									<RotateTransform x:Name="Angle" />
								</TransformGroup>
							</Control.RenderTransform>
						</Control>
						<Control Template="{StaticResource btn_Up}"
										 RenderTransformOrigin="0.5,0.5"
										 HorizontalAlignment="Left">
							<Control.RenderTransform>
								<TransformGroup>
									<RotateTransform Angle="{Binding ElementName=Angle, Path=Angle}" />
								</TransformGroup>
							</Control.RenderTransform>
						</Control>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
										 Value="True">
							<Setter Property="Foreground"
											Value="{StaticResource EnableBrush}"></Setter>
							<Setter Property="Background"
											Value="{StaticResource dark24}"></Setter>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Angle"
																		 Storyboard.TargetProperty="Angle"
																		 To="180"
																		 DecelerationRatio="0.75"
																		 Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Angle"
																		 Storyboard.TargetProperty="Angle"
																		 To="0"
																		 DecelerationRatio="0.75"
																		 Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsChecked"
										 Value="False">
							<Setter Property="Foreground"
											Value="{StaticResource EnableBrush}"></Setter>
							<Setter Property="Background"
											Value="{StaticResource dark12}"></Setter>
						</Trigger>
						<Trigger  Property="IsMouseOver"
											Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropLime}"></Setter>
							<Setter Property="Background"
											Value="{StaticResource dark24}"></Setter>
						</Trigger>
						<Trigger  Property="IsPressed"
											Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropBlack}"></Setter>
							<Setter Property="Background"
											Value="{StaticResource dark12}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="tt_default"
				 TargetType="{x:Type ToolTip}"
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Width"
						Value="350"></Setter>
		<Setter Property="Background"
						Value="DarkBlue"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolTip}">
					<Grid>
						<Border BorderBrush="{TemplateBinding Foreground}"
										Background="{TemplateBinding Background}"
										BorderThickness="1"
										CornerRadius="16">
						</Border>
						<ContentPresenter Content="{TemplateBinding Content}"
															Margin="36,-1,36,1"
															VerticalAlignment="Center"></ContentPresenter>
						<Border HorizontalAlignment="Left"
										BorderBrush="{TemplateBinding Foreground}"
										BorderThickness="{TemplateBinding BorderThickness}"
										CornerRadius="16"
										Width="32"
										Height="32">
							<TextBlock>?</TextBlock>
						</Border>
						<Border HorizontalAlignment="Right"
										BorderBrush="{TemplateBinding Foreground}"
										BorderThickness="{TemplateBinding BorderThickness}"
										CornerRadius="16"
										Width="32"
										Height="32">
							<TextBlock>?</TextBlock>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="dpn_slider" TargetType="DockPanel">
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Effect" Value="{StaticResource dropBlue}"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="btn_trigger"
				 TargetType="{x:Type Button}" 
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Background"
						Value="{StaticResource dark24}"></Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
							 Value="True">
				<Setter Property="Effect"
								Value="{StaticResource dropBlue}"></Setter>
				<Setter Property="BorderThickness"
								Value="3"></Setter>
			</Trigger>
			<Trigger Property="IsEnabled"
							 Value="False">
				<Setter Property="Effect"
								Value="{StaticResource dropRed}"></Setter>
				<Setter Property="Foreground"
								Value="Red"></Setter>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsPressed"
							 Value="True"></Condition>
					<Condition Property="IsEnabled"
							 Value="True"></Condition>
				</MultiTrigger.Conditions>
				<Setter Property="Effect"
								Value="{StaticResource dropBlack}"></Setter>
				<Setter Property="BorderThickness"
								Value="1"></Setter>
			</MultiTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="btn_demo_window"
				 TargetType="{x:Type Button}"
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="BorderThickness"
						Value="1"></Setter>
		<Setter Property="Width"
						Value="160" />
		<Setter Property="Height"
						Value="90" />
		<Setter Property="Background"
						Value="{StaticResource dark24}" />
		<Setter Property="Effect"
						Value="{StaticResource dropBlack}" />
		<Setter Property="ToolTip"
						Value="Window position and size preview"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border Height="{TemplateBinding Height}"
										Width="{TemplateBinding Width}"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding Foreground}"
										BorderThickness="{TemplateBinding BorderThickness}">
							<TextBlock x:Name="ScreenDemo_Text"
												 Text="{TemplateBinding Content}"
												 FontSize="{TemplateBinding FontSize}"
												 TextBlock.Foreground="{TemplateBinding Foreground}"
												 VerticalAlignment="Center"
												 TextWrapping="WrapWithOverflow"></TextBlock>
						</Border>
						<Border Height="8"
										VerticalAlignment="Top"
										Background="{TemplateBinding Foreground}">
							<DockPanel LastChildFill="False">
								<Grid DockPanel.Dock="Right"
											Margin="1,0"
											Height="8"
											Width="8">
									<Border Height="2"
													Width="8"
													Background="Black"
													CornerRadius="1"
													RenderTransformOrigin="0.5,0.5">
										<Border.RenderTransform>
											<TransformGroup>
												<RotateTransform Angle="45" />
											</TransformGroup>
										</Border.RenderTransform>
									</Border>
									<Border Height="2"
													Width="8"
													Background="Black"
													CornerRadius="1"
													RenderTransformOrigin="0.5,0.5">
										<Border.RenderTransform>
											<TransformGroup>
												<RotateTransform Angle="-45" />
											</TransformGroup>
										</Border.RenderTransform>
									</Border>
								</Grid>
								<Border Height="6"
												Width="6"
												Margin="1"
												CornerRadius="1"
												DockPanel.Dock="Right"
												BorderBrush="Black"
												BorderThickness="2" />
								<Border Height="2"
												Width="6"
												Margin="2,0"
												CornerRadius="1"
												DockPanel.Dock="Right"
												Background="Black" />
							</DockPanel>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter Property="Background"
											Value="{StaticResource dark12}" />
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}" />
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="true">
							<Setter Property="Background"
											Value="{StaticResource dark24}" />
							<Setter Property="Effect"
											Value="{StaticResource dropBlack}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="btn_demo_screen"
				 TargetType="{x:Type CheckBox}"
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="BorderThickness"
						Value="1"></Setter>
		<Setter Property="FontSize"
						Value="14"></Setter>
		<Setter Property="FontFamily"
						Value="Bold"></Setter>
		<Setter Property="Width"
						Value="360"></Setter>
		<Setter Property="Height"
						Value="203"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Grid>
						<Border  Width="{TemplateBinding Width}"
										 Height="{TemplateBinding Height}"
										 BorderBrush="{TemplateBinding Foreground}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 Background="{TemplateBinding Background}">
							<TextBlock Text="{TemplateBinding Content}"
												 HorizontalAlignment="Left"
												 VerticalAlignment="Center"
												 Margin="5"
												 TextAlignment="Left"
												 TextWrapping="Wrap"
												 Foreground="{TemplateBinding Foreground}"
												 FontSize="{TemplateBinding FontSize}"></TextBlock>
						</Border>
						<Grid VerticalAlignment="Bottom"
									Width="{TemplateBinding Width}">
							<Border  Width="{TemplateBinding Width}"
											 Height="14"
											 x:Name="border"
											 VerticalAlignment="Bottom"
											 BorderBrush="{TemplateBinding Foreground}"
											 BorderThickness="{TemplateBinding BorderThickness}" />
							<Border Width="32"
											Height="8"
											Margin="13,0"
											HorizontalAlignment="Left"
											Background="{TemplateBinding Foreground}" />
							<Border Width="{Binding Height, ElementName=border}"
											Height="{Binding Height, ElementName=border}"
											HorizontalAlignment="Left">
								<UniformGrid Rows="2"
														 Columns="2"
														 Margin="3">
									<Border Background="Red" />
									<Border Background="Lime" />
									<Border Background="Cyan" />
									<Border Background="Yellow" />
								</UniformGrid>
							</Border>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter Property="Background"
											Value="{StaticResource dark24}"></Setter>
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}"></Setter>
						</Trigger>
						<Trigger Property="IsChecked"
										 Value="True">
							<Setter Property="Background"
											Value="{StaticResource dark24}"></Setter>
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}"></Setter>
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="True">
							<Setter Property="Background"
											Value="{StaticResource dark24}"></Setter>
							<Setter Property="Effect"
											Value="{StaticResource dropBlack}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ArrowBtn"
				 TargetType="{x:Type Button}">
		<Setter Property="BorderBrush"
						Value="{StaticResource EnableBrush}"></Setter>
		<Setter Property="Width"
						Value="50"></Setter>
		<Setter Property="MinWidth"
						Value="50"></Setter>
		<Setter Property="Height"
						Value="16"></Setter>
		<Setter Property="RenderTransformOrigin"
						Value="0.5, 0.5"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Width="{TemplateBinding Width}"
								Height="{TemplateBinding Height}">
						<Border Width="15"
										Height="1.5"
										CornerRadius="1"
										Margin="0,0,-2,2"
										HorizontalAlignment="Right"
										VerticalAlignment="Bottom"
										Background="{TemplateBinding BorderBrush}"
										RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform />
									<SkewTransform />
									<RotateTransform Angle="-45" />
									<TranslateTransform />
								</TransformGroup>
							</Border.RenderTransform>
						</Border>
						<Border Width="15"
										Height="1.5"
										CornerRadius="1"
										Margin="0,2,-2,0"
										HorizontalAlignment="Right"
										VerticalAlignment="Top"
										Background="{TemplateBinding BorderBrush}"
										RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform />
									<SkewTransform />
									<RotateTransform Angle="45" />
									<TranslateTransform />
								</TransformGroup>
							</Border.RenderTransform>
						</Border>
						<Border Width="{TemplateBinding Width}"
										Height="1.5"
										CornerRadius="1"
										Background="{TemplateBinding BorderBrush}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TriangleCheckbox"
				 TargetType="{x:Type CheckBox}">
		<Setter Property="IsChecked"
						Value="True" />
		<Setter Property="SnapsToDevicePixels"
						Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Viewbox>
						<Border x:Name="outerBorder"
										BorderBrush="Lime"
										Height="20"
										Width="20"
										BorderThickness="1"
										CornerRadius="10,00,10,00"
										Effect="{StaticResource dropLime}" />
					</Viewbox>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter TargetName="outerBorder"
											Property="BorderBrush"
											Value="Lime" />
							<Setter TargetName="outerBorder"
											Property="Effect"
											Value="{StaticResource dropLime}" />
						</Trigger>
						<Trigger Property="IsChecked"
										 Value="True">
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundBlue2}" />
						</Trigger>
						<Trigger Property="IsChecked"
										 Value="False">
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundRed2}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="True" />
								<Condition Property="IsMouseOver"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundBlue3}" />
							<Setter TargetName="outerBorder"
											Property="Effect"
											Value="{StaticResource dropLime}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="False" />
								<Condition Property="IsMouseOver"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundRed3}" />
							<Setter TargetName="outerBorder"
											Property="Effect"
											Value="{StaticResource dropRed}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="True" />
								<Condition Property="IsPressed"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundBlue1}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="False" />
								<Condition Property="IsPressed"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundRed1}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="btn_nav"
				 TargetType="{x:Type Button}"
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Width"
						Value="40" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Viewbox>
						<Border x:Name="elip"
										Width="20"
										Height="20"
										BorderBrush="{TemplateBinding Foreground}"
										CornerRadius="0"
										BorderThickness="{TemplateBinding BorderThickness}"
										Background="{TemplateBinding Background}">
							<TextBlock Text="{TemplateBinding Content}"
												 TextAlignment="Center"
												 Foreground="{TemplateBinding Foreground}"
												 FontSize="20"
												 Margin="0,-7.5,0,0" />
						</Border>
					</Viewbox>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropLime}"></Setter>
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropBlack}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ConfirmFormButton"
				 TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels"
						Value="True" />
		<Setter Property="BorderThickness"
						Value="2" />
		<Setter Property="Width"
						Value="50" />
		<Setter Property="Margin"
						Value="0" />
		<Setter Property="Height"
						Value="50" />
		<Setter Property="Foreground"
						Value="{StaticResource EnableBrush}" />
		<Setter Property="Background"
						Value="{StaticResource roundBlue1}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Viewbox>
						<Border x:Name="elip"
										Width="{TemplateBinding Width}"
										Height="{TemplateBinding Height}"
										BorderBrush="{TemplateBinding Foreground}"
										CornerRadius="25"
										BorderThickness="{TemplateBinding BorderThickness}"
										Background="{TemplateBinding Background}">
							<TextBlock Text="{TemplateBinding Content}"
												 TextAlignment="Center"
												 Foreground="{TemplateBinding Foreground}"
												 FontSize="20"
												 Margin="0,0,0,5"
												 VerticalAlignment="Center" />
						</Border>
					</Viewbox>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="true">
							<Setter Property="Effect"
											Value="{StaticResource dropLime}" />
							<Setter Property="Foreground"
											Value="Lime" />
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="true">
							<Setter Property="Foreground"
											Value="YellowGreen" />
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="btn_Reset"
				 TargetType="{x:Type Button}"
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Background"
						Value="{StaticResource dark12}"></Setter>
		<Setter Property="BorderThickness"
						Value="0"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>

						<Border BorderBrush="{TemplateBinding Foreground}"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Effect="{TemplateBinding Effect}"
										CornerRadius="16">
						</Border>
						<ContentPresenter Content="{TemplateBinding Content}"
															Margin="10,1,10,-2" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}" />
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropBlack}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollViewerAnimationStyle"
				 TargetType="{x:Type ScrollViewer}">
		<Setter Property="CanContentScroll"
						Value="False"></Setter>
		<Setter Property="VerticalAlignment"
						Value="Top"></Setter>
		<Setter Property="HorizontalAlignment"
						Value="Left"></Setter>
		<Setter Property="VerticalScrollBarVisibility"
						Value="Hidden"></Setter>
		<Style.Triggers>
			<Trigger Property="IsVisible"
							 Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Opacity"
															 To="1"
															 From="0.5"
															 Duration="{StaticResource animationTimeNormal}"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Opacity"
															 To="0"
															 Duration="{StaticResource animationTimeNormal}"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="Slider_ListView_Rule"
				 TargetType="{x:Type Slider}">
		<Setter Property="OverridesDefaultStyle"
						Value="true" />
		<Setter Property="Foreground"
						Value="{StaticResource EnableBrush}" />
		<Setter Property="TickFrequency"
						Value="1" />
		<Setter Property="BorderThickness"
						Value="1" />
		<Setter Property="Width"
						Value="20" />
		<Setter Property="Orientation"
						Value="Vertical" />
		<Setter Property="Opacity"
						Value="1" />
		<Setter Property="SnapsToDevicePixels"
						Value="True" />
		<Setter Property="IsSnapToTickEnabled"
						Value="true" />
		<Setter Property="BorderBrush"
						Value="{StaticResource EnableBrush}" />
		<Setter Property="Template"
						Value="{DynamicResource VerticalSlider}" />
		<Style.Resources>
			<CornerRadius x:Key="CornerRadius2">6</CornerRadius>
			<CornerRadius x:Key="CornerRadius1">6</CornerRadius>
			<sys:Double x:Key="Height1">12</sys:Double>
			<sys:Double x:Key="Height2">12</sys:Double>
			<Style x:Key="HorizontalSlider_Thumb"
						 TargetType="{x:Type Thumb}">
				<Setter Property="SnapsToDevicePixels"
								Value="true" />
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Viewbox x:Name="Ellipse"
											 Width="{ TemplateBinding Width}">
								<Border Width="20"
												Height="4"
												Background="{TemplateBinding BorderBrush}" />
							</Viewbox>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="VerticalSlider_DecreaseRepeatButton"
						 TargetType="{x:Type RepeatButton}">
				<Setter Property="SnapsToDevicePixels"
								Value="true" />
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Border Background="#00000000">
								<Border x:Name="background"
												BorderBrush="Red"
												BorderThickness="{TemplateBinding BorderThickness}"
												Background="{TemplateBinding Foreground}"
												CornerRadius="{StaticResource CornerRadius1}"
												Width="{StaticResource Height1}"
												Opacity="0" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver"
												 Value="True">
									<Trigger.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="background"
																				 Storyboard.TargetProperty="Width"
																				 To="{StaticResource Height2}"
																				 Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
											</Storyboard>
										</BeginStoryboard>
									</Trigger.EnterActions>
									<Trigger.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="background"
																				 Storyboard.TargetProperty="Width"
																				 To="{StaticResource Height1}"
																				 Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
											</Storyboard>
										</BeginStoryboard>
									</Trigger.ExitActions>
									<Setter TargetName="background"
													Property="Background"
													Value="Lime" />
									<Setter TargetName="background"
													Property="Width"
													Value="{StaticResource Height2}" />
								</Trigger>
								<Trigger Property="IsPressed"
												 Value="True">
									<Setter TargetName="background"
													Property="Background"
													Value="YellowGreen" />
									<Setter TargetName="background"
													Property="Width"
													Value="{StaticResource Height1}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="VerticalSlider_IncreaseRepeatButton"
						 TargetType="{x:Type RepeatButton}">
				<Setter Property="SnapsToDevicePixels"
								Value="true" />
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Border Background="#00000000">
								<Border x:Name="background"
												BorderBrush="Red"
												Background="Blue"
												BorderThickness="{TemplateBinding BorderThickness}"
												CornerRadius="{StaticResource CornerRadius1}"
												Width="{StaticResource Height1}"
												Opacity="0" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver"
												 Value="True">
									<Trigger.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="background"
																				 Storyboard.TargetProperty="Width"
																				 To="{StaticResource Height2}"
																				 Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
											</Storyboard>
										</BeginStoryboard>
									</Trigger.EnterActions>
									<Trigger.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="background"
																				 Storyboard.TargetProperty="Width"
																				 To="{StaticResource Height1}"
																				 Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
											</Storyboard>
										</BeginStoryboard>
									</Trigger.ExitActions>
									<Setter TargetName="background"
													Property="Background"
													Value="Lime" />
									<Setter TargetName="background"
													Property="Width"
													Value="{StaticResource Height2}" />
								</Trigger>
								<Trigger Property="IsPressed"
												 Value="True">
									<Setter TargetName="background"
													Property="Background"
													Value="YellowGreen" />
									<Setter TargetName="background"
													Property="Width"
													Value="{StaticResource Height1}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<ControlTemplate x:Key="VerticalSlider"
											 TargetType="{x:Type Slider}">
				<Viewbox Stretch="Uniform">
					<Grid Width="{TemplateBinding Width}"
								Height="{TemplateBinding Height}">
						<Track x:Name="PART_Track">
							<Track.DecreaseRepeatButton>
								<RepeatButton Style="{DynamicResource VerticalSlider_DecreaseRepeatButton}"
															BorderThickness="{TemplateBinding BorderThickness}"
															Visibility="Collapsed"
															Command="Slider.DecreaseLarge" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Style="{DynamicResource VerticalSlider_IncreaseRepeatButton}"
															BorderThickness="{TemplateBinding BorderThickness}"
															Visibility="Collapsed"
															BorderBrush="{TemplateBinding BorderBrush}"
															Command="Slider.IncreaseLarge" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{DynamicResource HorizontalSlider_Thumb}"
											 BorderBrush="{TemplateBinding BorderBrush}"
											 BorderThickness="{TemplateBinding BorderThickness}"
											 RenderTransformOrigin="0.5,0.5"></Thumb>
							</Track.Thumb>
						</Track>
					</Grid>
				</Viewbox>
			</ControlTemplate>
		</Style.Resources>
		<!--<Style.Triggers>
          <Trigger Property="IsMouseOver"
                    Value="True">
              <Trigger.EnterActions>
                  <BeginStoryboard>
                      <Storyboard>
                          <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
                          <DoubleAnimation Storyboard.TargetProperty="Width"
                                            To="12"
                                            Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
                      </Storyboard>
                  </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                  <BeginStoryboard>
                      <Storyboard>
                          <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                            To="0.5"
                                            Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
                          <DoubleAnimation Storyboard.TargetProperty="Width"
                                            To="8"
                                            Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
                      </Storyboard>
                  </BeginStoryboard>
              </Trigger.ExitActions>
          </Trigger>
      </Style.Triggers>-->
	</Style>
	<Style x:Key="sl_default"
				 TargetType="{x:Type Slider}"
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="BorderThickness"
						Value="1" />
		<Setter Property="BorderBrush"
						Value="Black"></Setter>
		<Setter Property="Value"
						Value="24" />
		<Setter Property="Maximum"
						Value="48" />
		<Setter Property="Minimum"
						Value="0" />
		<Setter Property="TickFrequency"
						Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Track x:Name="PART_Track">
						<Track.DecreaseRepeatButton>
							<RepeatButton x:Name="DecreaseRepeatButton"
														BorderThickness="{TemplateBinding BorderThickness}"
														BorderBrush="{TemplateBinding BorderBrush}"
														Foreground="{TemplateBinding Foreground}"
														Background="{TemplateBinding Background}"
														Margin="0,0,-16,0"
														Command="Slider.DecreaseLarge">
								<RepeatButton.Template>
									<ControlTemplate TargetType="{x:Type RepeatButton}">
										<Grid Height="{TemplateBinding Height}"
													Background="{TemplateBinding Background}">
											<Border BorderBrush="{TemplateBinding BorderBrush}"
															BorderThickness="{TemplateBinding BorderThickness}"
															Background="{TemplateBinding Foreground}"
															CornerRadius="2"
															Height="4"
															Margin="5,0,14,0" />
										</Grid>
									</ControlTemplate>
								</RepeatButton.Template>
							</RepeatButton>
						</Track.DecreaseRepeatButton>
						<Track.IncreaseRepeatButton>
							<RepeatButton x:Name="IncreaseRepeatButton"
														Effect="{x:Null}"
														BorderThickness="{TemplateBinding BorderThickness}"
														BorderBrush="{TemplateBinding BorderBrush}"
														Foreground="{TemplateBinding Foreground}"
														Background="{TemplateBinding Background}"
														Margin="-16,0,0,0"
														Command="Slider.IncreaseLarge">
								<RepeatButton.Template>
									<ControlTemplate TargetType="{x:Type RepeatButton}">
										<Grid Height="{TemplateBinding Height}"
													Background="{TemplateBinding Background}">
											<Border BorderBrush="{TemplateBinding BorderBrush}"
															BorderThickness="{TemplateBinding BorderThickness}"
															Background="{StaticResource dark24}"
															CornerRadius="2"
															Height="4"
															Margin="14,0,5,0" />
										</Grid>
									</ControlTemplate>
								</RepeatButton.Template>
							</RepeatButton>
						</Track.IncreaseRepeatButton>
						<Track.Thumb>
							<Thumb x:Name="Thumb"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 Foreground="{TemplateBinding Foreground}"
										 Background="{TemplateBinding Background}">
								<Thumb.Template>
									<ControlTemplate TargetType="{x:Type Thumb}">
										<Grid>
											<Border Width="30"
															Height="30"
															CornerRadius="20"
															BorderBrush="{TemplateBinding Foreground}"
															BorderThickness="1.5"
															Background="{TemplateBinding BorderBrush}">
											</Border>
											<Border Width="24"
															Height="24"
															CornerRadius="20"
															Background="{TemplateBinding Foreground}"></Border>
										</Grid>
									</ControlTemplate>
								</Thumb.Template>
							</Thumb>
						</Track.Thumb>
					</Track>
					<ControlTemplate.Triggers>
						<!--<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}"></Setter>
							<Setter Property="Foreground"
											Value="{StaticResource EnableBrush}"></Setter>
						</Trigger>
						<Trigger Property="IsMouseCaptured"
										 Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}"></Setter>
						</Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="chb_switch"
				 TargetType="{x:Type CheckBox}"
				 BasedOn="{StaticResource BaseStyle}">
		<Setter Property="BorderBrush"
						Value="{StaticResource dark24}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid Background="{TemplateBinding Background}"
								Height="{TemplateBinding Height}">
						<ContentPresenter Content="{TemplateBinding Content}"
															HorizontalAlignment="Left"
															VerticalAlignment="Center"
															Effect="{TemplateBinding Effect}"
															TextBlock.FontSize="{TemplateBinding FontSize}"
															TextBlock.FontFamily="{TemplateBinding FontFamily}"
															TextBlock.Foreground="{TemplateBinding Foreground}"></ContentPresenter>
						<Grid HorizontalAlignment="Right">
							<Border x:Name="Bullet"
											Width="24"
											Height="24"
											CornerRadius="12"
											Background="{TemplateBinding Foreground}">
								<Border.RenderTransform>
									<TransformGroup>
										<TranslateTransform x:Name="MoveX"
																				X="-10" />
									</TransformGroup>
								</Border.RenderTransform>
							</Border>
							<Border Width="50"
											Height="30"
											CornerRadius="15"
											BorderBrush="{TemplateBinding Foreground}"
											Background="{TemplateBinding BorderBrush}"
											BorderThickness="1.5"
											Canvas.ZIndex="-1" />
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
										 Value="False">
							<Setter Property="Foreground"
											Value="{StaticResource DisableBrush}"></Setter>
						</Trigger>
						<Trigger  Property="IsMouseOver"
											Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}"></Setter>
						</Trigger>
						<Trigger Property="IsChecked"
										 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MoveX"
																		 Storyboard.TargetProperty="X"
																		 To="10"
																		 Duration="{StaticResource animationTimeFast}" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MoveX"
																		 Storyboard.TargetProperty="X"
																		 To="-10"
																		 Duration="{StaticResource animationTimeFast}" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
							<Setter Property="Foreground"
											Value="{StaticResource EnableBrush}"></Setter>
						</Trigger>
						<Trigger  Property="IsPressed"
											Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropBlack}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="lv_Rules"
				 TargetType="{x:Type ListView}">
		<Setter Property="Background"
						Value="#01000000" />
		<Setter Property="BorderBrush"
						Value="{StaticResource EnableBrush}" />
		<Setter Property="Foreground"
						Value="{StaticResource EnableBrush}" />
		<Setter Property="BorderThickness"
						Value="1" />
		<Setter Property="FontSize"
						Value="14" />
		<Setter Property="VerticalAlignment"
						Value="Top" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
						Value="Hidden" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
						Value="Hidden" />
		<Setter Property="ScrollViewer.CanContentScroll"
						Value="true" />
		<Setter Property="ScrollViewer.PanningMode"
						Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled"
						Value="False" />
		<Setter Property="VerticalContentAlignment"
						Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<Themes:ListBoxChrome x:Name="Bd"
																BorderBrush="{TemplateBinding Foreground}"
																BorderThickness="{TemplateBinding BorderThickness}"
																Background="{TemplateBinding Background}"
																RenderMouseOver="{TemplateBinding IsMouseOver}"
																RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
																SnapsToDevicePixels="true">
						<ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Themes:ListBoxChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
										 Value="false">
							<Setter Property="Background"
											TargetName="Bd"
											Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
						</Trigger>
						<Trigger Property="IsSelected"
										 Value="true">
							<Setter Property="Background"
											TargetName="Bd"
											Value="#242424" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping"
													 Value="true" />
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
													 Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll"
											Value="false" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
				 TargetType="ScrollViewer">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<DockPanel Margin="0">
							<ScrollViewer DockPanel.Dock="Top"
														HorizontalScrollBarVisibility="Hidden"
														VerticalScrollBarVisibility="Hidden"
														Focusable="false">
								<GridViewHeaderRowPresenter Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
																						ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
																						ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
																						ColumnHeaderTemplateSelector="{Binding  Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
																						AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
																						ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
																						ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
																						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
							<ScrollContentPresenter Name="PART_ScrollContentPresenter"
																			KeyboardNavigation.DirectionalNavigation="Local"
																			CanContentScroll="True"
																			CanHorizontallyScroll="False"
																			CanVerticallyScroll="True" />
						</DockPanel>
						<ScrollBar Name="PART_HorizontalScrollBar"
											 Orientation="Horizontal"
											 Grid.Row="1"
											 Maximum="{TemplateBinding ScrollableWidth}"
											 ViewportSize="{TemplateBinding ViewportWidth}"
											 Value="{TemplateBinding HorizontalOffset}"
											 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
						<ScrollBar Name="PART_VerticalScrollBar"
											 Grid.Column="1"
											 Maximum="{TemplateBinding ScrollableHeight}"
											 ViewportSize="{TemplateBinding ViewportHeight}"
											 Value="{TemplateBinding VerticalOffset}"
											 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="GridViewColumnHeaderGripper"
				 TargetType="Thumb">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}"
									Width="2"
									CornerRadius="0"
									Height="20"
									Margin="0,-2,0,0"
									Background="{TemplateBinding BorderBrush}"
									Opacity="1"></Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Type GridViewColumnHeader}"
				 TargetType="GridViewColumnHeader">
		<Setter Property="HorizontalContentAlignment"
						Value="Center" />
		<Setter Property="VerticalContentAlignment"
						Value="Center" />
		<Setter Property="Foreground"
						Value="{StaticResource EnableBrush}"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewColumnHeader">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver"></VisualState>
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="HeaderBorder"
										BorderThickness="0,0,0,1"
										BorderBrush="{TemplateBinding Foreground}"
										Background="{StaticResource dark24}">
							<!--<Border.Background>
                                  <LinearGradientBrush StartPoint="-0.5,0.5"
                                                        EndPoint="1.2,0.5">
                                      <LinearGradientBrush.GradientStops>
                                          <GradientStopCollection>
                                              <GradientStop Color="Blue"
                                                            Offset="0.0"/>
                                              <GradientStop Color="Magenta"
                                                            Offset="1.0"/>
                                          </GradientStopCollection>
                                      </LinearGradientBrush.GradientStops>
                                  </LinearGradientBrush>
                              </Border.Background>-->
							<ContentPresenter x:Name="HeaderContent"
																TextBlock.FontSize="14"
																Margin="0,-4,0,0"
																TextBlock.Foreground="{TemplateBinding Foreground}"
																RecognizesAccessKey="True"
																VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<Thumb x:Name="PART_HeaderGripper"
									 HorizontalAlignment="Right"
									 BorderBrush="{TemplateBinding Foreground}"
									 Style="{StaticResource GridViewColumnHeaderGripper}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Role"
							 Value="Floating">
				<Setter Property="Opacity"
								Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Canvas Name="PART_FloatingHeaderCanvas">
								<Rectangle Fill="Blue"
													 Width="{TemplateBinding Width}"
													 Height="{TemplateBinding Height}" />
							</Canvas>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role"
							 Value="Padding">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Border Name="HeaderBorder"
											BorderThickness="0">
								<Border.Background>
									<SolidColorBrush Color="{DynamicResource ControlLightColor}" />
								</Border.Background>
								<Border.BorderBrush>
									<LinearGradientBrush StartPoint="0,0"
																			 EndPoint="0,1">
										<LinearGradientBrush.GradientStops>
											<GradientStopCollection>
												<GradientStop Color="{DynamicResource BorderLightColor}"
																			Offset="0.0" />
												<GradientStop Color="{DynamicResource BorderDarkColor}"
																			Offset="1.0" />
											</GradientStopCollection>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Border.BorderBrush>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="{x:Type ListView}"
				 TargetType="ListView">
		<Setter Property="SnapsToDevicePixels"
						Value="true" />
		<Setter Property="OverridesDefaultStyle"
						Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
						Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
						Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll"
						Value="true" />
		<Setter Property="VerticalContentAlignment"
						Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border Name="Border"
									BorderThickness="0"
									Background="Red"
									BorderBrush="Lime">
						<ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping"
										 Value="true">
							<Setter Property="ScrollViewer.CanContentScroll"
											Value="false" />
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="false">
							<Setter TargetName="Border"
											Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Type ListViewItem}"
				 TargetType="ListViewItem">
		<Setter Property="SnapsToDevicePixels"
						Value="true" />
		<Setter Property="OverridesDefaultStyle"
						Value="true" />
		<Setter Property="VerticalAlignment"
						Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid SnapsToDevicePixels="true">
						<Rectangle x:Name="background"
											 Fill="{StaticResource MenuBackground}"
											 Opacity="0"></Rectangle>
						<GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																	HorizontalAlignment="Center"
																	TextBlock.TextAlignment="Center"
																	TextBlock.Foreground="{TemplateBinding Foreground}"></GridViewRowPresenter>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="background"
																		 Storyboard.TargetProperty="Opacity"
																		 To="1"
																		 Duration="{StaticResource animationTimeFast}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="background"
																		 Storyboard.TargetProperty="Opacity"
																		 To="1"
																		 Duration="{StaticResource animationTimeFast}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
										 Value="True">
							<Setter Property="Foreground"
											Value="{StaticResource EnableBrush}"></Setter>
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="False">
							<Setter Property="Foreground"
											Value="{StaticResource DisableBrush}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="CheckBox_Round"
				 TargetType="{x:Type CheckBox}">
		<Setter Property="HorizontalAlignment"
						Value="Left" />
		<Setter Property="BorderBrush"
						Value="{StaticResource EnableBrush}" />
		<Setter Property="Foreground"
						Value="{StaticResource EnableBrush}" />
		<Setter Property="FontSize"
						Value="24" />
		<Setter Property="FontWeight"
						Value="Light" />
		<Setter Property="HorizontalAlignment"
						Value="Stretch" />
		<Setter Property="Margin"
						Value="0,2,0,2" />
		<Setter Property="BorderThickness"
						Value="1.5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Grid Name="mainGrid"
								Height="36">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="36"></ColumnDefinition>
							<ColumnDefinition Width="*"></ColumnDefinition>
						</Grid.ColumnDefinitions>
						<Border x:Name="backround"
										Grid.ColumnSpan="2"
										Background="{StaticResource MenuBackground}"
										Opacity="0.25"
										CornerRadius="20"></Border>
						<Border Width="18"
										Height="18"
										x:Name="outterBall"
										BorderBrush="{TemplateBinding Foreground}"
										Background="#01000000"
										BorderThickness="{TemplateBinding BorderThickness}"
										CornerRadius="30"></Border>
						<Border Width="0"
										Name="circle"
										Height="0"
										BorderBrush="{TemplateBinding Foreground}"
										Background="{StaticResource roundBlue2}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Effect="{StaticResource dropLime}"
										CornerRadius="20"></Border>
						<ContentPresenter Grid.Column="1"
															x:Name="content"
															Margin="-0,0,15,0"
															SnapsToDevicePixels="True"
															HorizontalAlignment="Left"
															Content="{TemplateBinding Content}"
															TextBlock.FontSize="{TemplateBinding FontSize}"
															TextBlock.Foreground="{TemplateBinding Foreground}" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="True" />
								<Condition Property="IsMouseOver"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="circle"
											Property="Background"
											Value="{StaticResource roundBlue3}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="True" />
								<Condition Property="IsMouseOver"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="circle"
											Property="Background"
											Value="{StaticResource roundBlue3}" />
						</MultiTrigger>
						<Trigger Property="IsChecked"
										 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="circle"
																									 Storyboard.TargetProperty="Width"
																									 Duration="{StaticResource animationTimeSlow}">
											<LinearDoubleKeyFrame Value="36"
																						KeyTime="0:0:0.25" />
											<LinearDoubleKeyFrame Value="24"
																						KeyTime="0:0:0.4" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="circle"
																									 Storyboard.TargetProperty="Height"
																									 Duration="{StaticResource animationTimeSlow}">
											<LinearDoubleKeyFrame Value="36"
																						KeyTime="0:0:0.25" />
											<LinearDoubleKeyFrame Value="24"
																						KeyTime="0:0:0.4" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="backround"
																		 Storyboard.TargetProperty="Opacity"
																		 To="0.8"
																		 Duration="{StaticResource animationTimeFast}" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="circle"
																									 Storyboard.TargetProperty="Width"
																									 Duration="{StaticResource animationTimeSlow}">
											<LinearDoubleKeyFrame Value="36"
																						KeyTime="0:0:0.15" />
											<LinearDoubleKeyFrame Value="0"
																						KeyTime="0:0:0.4" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="circle"
																									 Storyboard.TargetProperty="Height"
																									 Duration="{StaticResource animationTimeSlow}">
											<LinearDoubleKeyFrame Value="36"
																						KeyTime="0:0:0.15" />
											<LinearDoubleKeyFrame Value="0"
																						KeyTime="0:0:0.4" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="backround"
																		 Storyboard.TargetProperty="Opacity"
																		 To="0.25"
																		 Duration="{StaticResource animationTimeFast}" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
													 Value="True"></Condition>
							</MultiTrigger.Conditions>
							<Setter TargetName="backround"
											Property="BorderBrush"
											Value="Lime" />
							<Setter TargetName="outterBall"
											Property="Effect"
											Value="{StaticResource dropLime}" />
							<Setter Property="Effect"
											Value="{StaticResource dropLime}"></Setter>
						</MultiTrigger>
						<Trigger Property="HorizontalAlignment"
										 Value="Left">
							<Setter TargetName="circle"
											Property="Grid.Column"
											Value="0"></Setter>
							<Setter TargetName="content"
											Property="Grid.Column"
											Value="1"></Setter>
						</Trigger>
						<Trigger Property="HorizontalAlignment"
										 Value="Right">
							<Setter TargetName="circle"
											Property="Grid.Column"
											Value="1"></Setter>
							<Setter TargetName="content"
											Property="Grid.Column"
											Value="0"></Setter>
						</Trigger>
						<Trigger  Property="IsPressed"
											Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="CheckBox_RuleList"
				 TargetType="{x:Type CheckBox}">
		<Setter Property="HorizontalAlignment"
						Value="Left" />
		<Setter Property="BorderBrush"
						Value="{StaticResource EnableBrush}" />
		<Setter Property="IsChecked"
						Value="False" />
		<Setter Property="Height"
						Value="32" />
		<Setter Property="MinWidth"
						Value="120" />
		<Setter Property="Width"
						Value="auto" />
		<Setter Property="FontWeight"
						Value="Light" />
		<Setter Property="Background"
						Value="#01000000" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Border Background="{TemplateBinding Background}">
						<Grid Name="mainGrid"
									Height="{TemplateBinding Height}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="50"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<Border x:Name="Ellipse"
											Width="16"
											Height="16"
											CornerRadius="16"
											Background="{StaticResource dark12}"
											BorderBrush="{TemplateBinding BorderBrush}"
											Effect="{TemplateBinding Effect}"
											BorderThickness="2"></Border>
							<TextBlock Grid.Column="1"
												 x:Name="content"
												 TextBlock.FontSize="20"
												 Margin="0,1,0,0"
												 SnapsToDevicePixels="True"
												 Text="{TemplateBinding Content}"
												 Foreground="{TemplateBinding BorderBrush}" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
										 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Ellipse"
																		 Storyboard.TargetProperty="Width"
																		 To="22"
																		 Duration="{StaticResource animationTimeFast}"
																		 AutoReverse="False" />
										<DoubleAnimation Storyboard.TargetName="Ellipse"
																		 Storyboard.TargetProperty="Height"
																		 To="22"
																		 Duration="{StaticResource animationTimeFast}"
																		 AutoReverse="False" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Ellipse"
																		 Storyboard.TargetProperty="Width"
																		 To="16"
																		 Duration="{StaticResource animationTimeFast}"
																		 AutoReverse="False" />
										<DoubleAnimation Storyboard.TargetName="Ellipse"
																		 Storyboard.TargetProperty="Height"
																		 To="16"
																		 Duration="{StaticResource animationTimeFast}"
																		 AutoReverse="False" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
							<Setter TargetName="Ellipse"
											Property="Background"
											Value="{StaticResource roundBlue2}" />
							<Setter Property="BorderBrush"
											Value="{StaticResource EnableBrush}" />
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}"></Setter>
						</Trigger>
						<Trigger  Property="IsChecked"
											Value="False">
							<Setter TargetName="Ellipse"
											Property="Background"
											Value="#01000000" />
							<Setter Property="BorderBrush"
											Value="{StaticResource DisableBrush}" />
						</Trigger>
						<Trigger  Property="IsEnabled"
											Value="False">
							<Setter TargetName="Ellipse"
											Property="Background"
											Value="#01000000" />
							<Setter Property="BorderBrush"
											Value="Red" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="True" />
								<Condition Property="IsMouseOver"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Ellipse"
											Property="Background"
											Value="{StaticResource roundBlue3}" />
							<Setter Property="BorderBrush"
											Value="Lime" />
							<Setter Property="Effect"
											Value="{StaticResource dropLime}"></Setter>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="False" />
								<Condition Property="IsMouseOver"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush"
											Value="Lime" />
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}"></Setter>
						</MultiTrigger>
						<Trigger Property="HorizontalAlignment"
										 Value="Left">
							<Setter TargetName="Ellipse"
											Property="Grid.Column"
											Value="0"></Setter>
							<Setter TargetName="content"
											Property="Grid.Column"
											Value="1"></Setter>
						</Trigger>
						<Trigger Property="HorizontalAlignment"
										 Value="Right">
							<Setter TargetName="Ellipse"
											Property="Grid.Column"
											Value="1"></Setter>
							<Setter TargetName="content"
											Property="Grid.Column"
											Value="0"></Setter>
						</Trigger>
						<Trigger  Property="IsPressed"
											Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropBlack}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="RoundBall"
									 TargetType="{x:Type CheckBox}">
		<Border x:Name="Ball"
						BorderBrush="Lime"
						Height="30"
						Width="30"
						BorderThickness="{TemplateBinding BorderThickness}"
						Effect="{StaticResource dropLime}"
						CornerRadius="25"
						RenderTransformOrigin="0.5,0.5">
			<Border.Background>
				<RadialGradientBrush>
					<GradientStop Color="Black"
												Offset="-1" />
					<GradientStop Color="LightBlue"
												Offset="0.0" />
					<GradientStop Color="Blue"
												Offset="1" />
				</RadialGradientBrush>
			</Border.Background>
			<ContentPresenter Content="{TemplateBinding Content}"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Margin="0,-4,0,0"
												TextBlock.Foreground="{TemplateBinding BorderBrush}"></ContentPresenter>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
							 Value="True">
				<!--<Trigger.EnterActions>
                      <BeginStoryboard>
                          <Storyboard>
                              -->
				<!--<DoubleAnimation Storyboard.TargetName="outerBorder"
                                                            Storyboard.TargetProperty="(Background).(RadialGradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                                            From="0.0"
                                                            To="0.8"
                                                            Duration="{StaticResource animationTimeFast}"
                                                            AutoReverse="True"/>-->
				<!--<ColorAnimation Storyboard.TargetName="Ball"
                                              Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                              From="Lime"
                                              To="Red"
                                              Duration="{StaticResource animationTimeFast}"
                                              AutoReverse="True"/>-->
				<!--
                          </Storyboard>
                      </BeginStoryboard>
                  </Trigger.EnterActions>-->
				<Setter TargetName="Ball"
								Property="BorderBrush"
								Value="Lime" />
			</Trigger>
			<Trigger Property="IsChecked"
							 Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetName="Ball"
															Storyboard.TargetProperty="(Background).(RadialGradientBrush.GradientStops)[1].(GradientStop.Color)"
															From="White"
															To="LightBlue"
															Duration="{StaticResource animationTimeFast}" />
							<ColorAnimation Storyboard.TargetName="Ball"
															Storyboard.TargetProperty="(Background).(RadialGradientBrush.GradientStops)[2].(GradientStop.Color)"
															From="Red"
															To="Blue"
															Duration="{StaticResource animationTimeFast}" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetName="Ball"
															Storyboard.TargetProperty="(Background).(RadialGradientBrush.GradientStops)[1].(GradientStop.Color)"
															From="LightBlue"
															To="White"
															Duration="{StaticResource animationTimeFast}" />
							<ColorAnimation Storyboard.TargetName="Ball"
															Storyboard.TargetProperty="(Background).(RadialGradientBrush.GradientStops)[2].(GradientStop.Color)"
															From="Blue"
															To="Red"
															Duration="{StaticResource animationTimeFast}" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
				<Setter TargetName="Ball"
								Property="Effect"
								Value="{StaticResource dropLime}" />
			</Trigger>
			<Trigger Property="IsChecked"
							 Value="False">
				<Setter TargetName="Ball"
								Property="Effect"
								Value="{StaticResource dropRed}" />
				<Setter TargetName="Ball"
								Property="RenderTransform"
								Value="{StaticResource Rotate45}" />
			</Trigger>
			<Trigger Property="IsPressed"
							 Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="Ball"
															 Storyboard.TargetProperty="Width"
															 From="30"
															 To="25"
															 Duration="{StaticResource animationTimeFast}"
															 AutoReverse="True" />
							<DoubleAnimation Storyboard.TargetName="Ball"
															 Storyboard.TargetProperty="Height"
															 From="30"
															 To="25"
															 Duration="{StaticResource animationTimeFast}"
															 AutoReverse="True" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="RoundCheckbox"
				 TargetType="{x:Type CheckBox}">
		<Setter Property="IsChecked"
						Value="True" />
		<Setter Property="SnapsToDevicePixels"
						Value="True" />
		<Setter Property="BorderThickness"
						Value="2" />
		<Setter Property="Template"
						Value="{StaticResource RoundBall}" />
		<Setter Property="ToolTipService.Placement"
						Value="Left" />
		<Setter Property="ToolTipService.InitialShowDelay"
						Value="100" />
	</Style>
	<Style x:Key="CheckBox_ShowDetail"
				 TargetType="{x:Type CheckBox}">
		<Setter Property="SnapsToDevicePixels"
						Value="True" />
		<Setter Property="BorderThickness"
						Value="0" />
		<Setter Property="Foreground"
						Value="{StaticResource EnableBrush}" />
		<Setter Property="BorderBrush"
						Value="Red" />
		<Setter Property="IsChecked"
						Value="False" />
		<Setter Property="Height"
						Value="50" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Border Height="{TemplateBinding Height}"
									Width="{TemplateBinding Width}"
									BorderThickness="{TemplateBinding BorderThickness}">
						<Grid Height="{TemplateBinding Height}"
									Width="{TemplateBinding Width}">
							<Border x:Name="background"
											Opacity="{Binding MenuOpacity}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											Background="{StaticResource MenuBackground}"></Border>
							<Border x:Name="mouseover"
											Opacity="0"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											RenderTransformOrigin="0.5,0.5"
											Background="{StaticResource MenuBackground}">
								<Border.RenderTransform>
									<RotateTransform Angle="180"></RotateTransform>
								</Border.RenderTransform>
							</Border>
							<Grid Width="{TemplateBinding Height}"
										Height="{TemplateBinding Height}"
										HorizontalAlignment="Left">
								<Border RenderTransformOrigin="0.5,0.5"
												Width="38"
												Height="38"
												x:Name="ball"
												ToolTip="Click To Show"
												ToolTipService.Placement="Top"
												Background="{StaticResource roundBlue2}"
												BorderBrush="{TemplateBinding BorderBrush}"
												BorderThickness="1.5"
												CornerRadius="25">
									<Grid Background="#01000000">
										<Border Height="14"
														Width="3"
														CornerRadius="1.5"
														Margin="-9,-3,0,0"
														VerticalAlignment="Center"
														Background="{TemplateBinding BorderBrush}"
														RenderTransformOrigin="0.5,0.5">
											<Border.RenderTransform>
												<TransformGroup>
													<ScaleTransform />
													<SkewTransform />
													<RotateTransform Angle="45" />
													<TranslateTransform />
												</TransformGroup>
											</Border.RenderTransform>
										</Border>
										<Border Height="14"
														Width="3"
														CornerRadius="1.5"
														Margin="9,-3,0,0"
														VerticalAlignment="Center"
														Background="{TemplateBinding BorderBrush}"
														RenderTransformOrigin="0.5,0.5">
											<Border.RenderTransform>
												<TransformGroup>
													<ScaleTransform />
													<SkewTransform />
													<RotateTransform Angle="-45" />
													<TranslateTransform />
												</TransformGroup>
											</Border.RenderTransform>
										</Border>
									</Grid>
									<Border.RenderTransform>
										<TransformGroup>
											<RotateTransform x:Name="rotateTransform"
																			 Angle="180"></RotateTransform>
										</TransformGroup>
									</Border.RenderTransform>
								</Border>
							</Grid>
							<ContentPresenter Grid.Column="0"
																Margin="55,-3,0,5"
																HorizontalAlignment="Left"
																VerticalAlignment="Center"
																Content="{TemplateBinding Content}"
																TextBlock.Foreground="{ TemplateBinding Foreground}"
																TextBlock.FontSize="34"
																TextBlock.FontWeight="Light"
																TextBlock.TextAlignment="Left"></ContentPresenter>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
										 Value="False">
							<Setter Property="BorderBrush"
											Value="Black" />
						</Trigger>
						<Trigger Property="IsChecked"
										 Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="mouseover"
																		 Storyboard.TargetProperty="Opacity"
																		 To="0"
																		 Duration="{StaticResource animationTimeFast}" />
										<DoubleAnimation Storyboard.TargetName="rotateTransform"
																		 Storyboard.TargetProperty="Angle"
																		 To="90"
																		 Duration="{StaticResource animationTimeFast}" />
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ball"
																									 Storyboard.TargetProperty="Width"
																									 Duration="{StaticResource animationTimeFast}">
											<LinearDoubleKeyFrame Value="50"
																						KeyTime="0:0:0.05" />
											<LinearDoubleKeyFrame Value="38"
																						KeyTime="0:0:0.1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ball"
																									 Storyboard.TargetProperty="Height"
																									 Duration="{StaticResource animationTimeFast}">
											<LinearDoubleKeyFrame Value="50"
																						KeyTime="0:0:0.05" />
											<LinearDoubleKeyFrame Value="38"
																						KeyTime="0:0:0.1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="mouseover"
																		 Storyboard.TargetProperty="Opacity"
																		 To="1"
																		 Duration="{StaticResource animationTimeFast}" />
										<DoubleAnimation Storyboard.TargetName="rotateTransform"
																		 Storyboard.TargetProperty="Angle"
																		 To="180"
																		 Duration="{StaticResource animationTimeFast}" />
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ball"
																									 Storyboard.TargetProperty="Width"
																									 Duration="{StaticResource animationTimeFast}">
											<LinearDoubleKeyFrame Value="30"
																						KeyTime="0:0:0.05" />
											<LinearDoubleKeyFrame Value="38"
																						KeyTime="0:0:0.1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ball"
																									 Storyboard.TargetProperty="Height"
																									 Duration="{StaticResource animationTimeFast}">
											<LinearDoubleKeyFrame Value="30"
																						KeyTime="0:0:0.05" />
											<LinearDoubleKeyFrame Value="38"
																						KeyTime="0:0:0.1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
													 Value="True"></Condition>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="mouseover"
																		 Storyboard.TargetProperty="Opacity"
																		 To="1"
																		 Duration="0" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="mouseover"
																		 Storyboard.TargetProperty="Opacity"
																		 To="0"
																		 Duration="0" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
							<Setter Property="BorderBrush"
											Value="{StaticResource EnableBrush}" />
							<Setter Property="Effect"
											TargetName="ball"
											Value="{StaticResource dropLime}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
													 Value="False"></Condition>
								<Condition Property="IsChecked"
													 Value="False"></Condition>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="mouseover"
																		 Storyboard.TargetProperty="Opacity"
																		 To="0"
																		 Duration="0" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="mouseover"
																		 Storyboard.TargetProperty="Opacity"
																		 To="1"
																		 Duration="0" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
							<Setter Property="BorderBrush"
											Value="{StaticResource EnableBrush}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled"
										 Value="False">
							<Setter Property="Foreground"
											Value="{StaticResource DisableBrush}"></Setter>
						</Trigger>
						<Trigger Property="IsChecked"
										 Value="True">
							<Setter Property="BorderBrush"
											Value="{StaticResource EnableBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ToolTipService.Placement"
						Value="Left" />
		<Setter Property="ToolTipService.InitialShowDelay"
						Value="100" />
	</Style>
	<Style x:Key="RoundCheckboxLeft"
				 TargetType="{x:Type CheckBox}">
		<Setter Property="IsChecked"
						Value="True" />
		<Setter Property="SnapsToDevicePixels"
						Value="True" />
		<Setter Property="BorderThickness"
						Value="3" />
		<Setter Property="Template"
						Value="{StaticResource RoundBall}" />
	</Style>
	<Style x:Key="RoundCheckboxRight"
				 TargetType="{x:Type CheckBox}">
		<Setter Property="IsChecked"
						Value="True" />
		<Setter Property="SnapsToDevicePixels"
						Value="True" />
		<Setter Property="BorderThickness"
						Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Viewbox>
						<Border x:Name="outerBorder"
										BorderBrush="Lime"
										Height="20"
										Width="20"
										BorderThickness="{TemplateBinding BorderThickness}"
										Effect="{StaticResource dropLime}"
										CornerRadius="10,00,10,10" />
					</Viewbox>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter TargetName="outerBorder"
											Property="BorderBrush"
											Value="Lime" />
							<Setter TargetName="outerBorder"
											Property="Effect"
											Value="{StaticResource dropLime}" />
						</Trigger>
						<Trigger Property="IsChecked"
										 Value="True">
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundBlue2}" />
						</Trigger>
						<Trigger Property="IsChecked"
										 Value="False">
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundRed2}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="True" />
								<Condition Property="IsMouseOver"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundBlue3}" />
							<Setter TargetName="outerBorder"
											Property="Effect"
											Value="{StaticResource dropLime}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="False" />
								<Condition Property="IsMouseOver"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundRed3}" />
							<Setter TargetName="outerBorder"
											Property="Effect"
											Value="{StaticResource dropRed}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="True" />
								<Condition Property="IsPressed"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundBlue1}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="False" />
								<Condition Property="IsPressed"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder"
											Property="Background"
											Value="{StaticResource roundRed1}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="Button_Color"
				 TargetType="{x:Type Button}">
		<Setter Property="Width"
						Value="69" />
		<Setter Property="HorizontalAlignment"
						Value="Stretch" />
		<Setter Property="VerticalAlignment"
						Value="Stretch" />
		<Setter Property="BorderThickness"
						Value="1.6" />
		<Setter Property="Margin"
						Value="3" />
		<Setter Property="BorderBrush"
						Value="Lime" />
		<Setter Property="Background"
						Value="{StaticResource dark12}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="outerBorder"
									BorderBrush="{TemplateBinding BorderBrush}"
									Width="{TemplateBinding Width}"
									Height="{TemplateBinding Width}"
									CornerRadius="20"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"></Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="true">
							<Setter Property="BorderBrush"
											Value="Lime" />
							<Setter Property="BorderThickness"
											Value="2" />
							<Setter Property="Effect"
											Value="{StaticResource dropLime}" />
							<Setter Property="BorderThickness"
											Value="3" />
						</Trigger>
						<Trigger Property="MinHeight"
										 Value="1">
							<Setter Property="BorderBrush"
											Value="Lime" />
							<Setter Property="BorderThickness"
											Value="2" />
							<Setter Property="Effect"
											Value="{StaticResource dropLime}" />
							<Setter TargetName="outerBorder"
											Property="CornerRadius"
											Value="35" />
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="true">
							<Setter Property="BorderBrush"
											Value="Lime" />
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}" />
							<Setter TargetName="outerBorder"
											Property="CornerRadius"
											Value="35" />
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="false">
							<Setter Property="BorderBrush"
											Value="Red" />
							<Setter Property="Effect"
											Value="{StaticResource dropRed}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ColorDropRight"
				 TargetType="{x:Type Button}"
				 BasedOn="{StaticResource Button_Color}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Viewbox>
						<Border x:Name="outerBorder"
										BorderBrush="{TemplateBinding Foreground}"
										Width="{TemplateBinding Width}"
										Height="80"
										CornerRadius="40,0,40,40"
										BorderThickness="{TemplateBinding BorderThickness}"
										Background="{TemplateBinding Background}">
							<TextBlock x:Name="Conntent"
												 Text="{TemplateBinding Content}"
												 Margin="0,6,0,0"
												 TextAlignment="Center" />
						</Border>
					</Viewbox>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="true">
							<Setter TargetName="outerBorder"
											Property="BorderBrush"
											Value="Lime" />
							<Setter TargetName="outerBorder"
											Property="BorderThickness"
											Value="3" />
							<Setter TargetName="Conntent"
											Property="Foreground"
											Value="Lime" />
							<Setter Property="Effect"
											TargetName="outerBorder"
											Value="{StaticResource dropLime}" />
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="true">
							<Setter TargetName="outerBorder"
											Property="BorderBrush"
											Value="YellowGreen" />
							<Setter TargetName="Conntent"
											Property="Foreground"
											Value="YellowGreen" />
							<Setter Property="Effect"
											TargetName="outerBorder"
											Value="{StaticResource dropBlack}" />
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="false">
							<Setter TargetName="outerBorder"
											Property="BorderBrush"
											Value="Red" />
							<Setter TargetName="Conntent"
											Property="Foreground"
											Value="Red" />
							<Setter Property="Effect"
											TargetName="outerBorder"
											Value="{StaticResource dropBlack}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="RoundCheck2Right"
				 TargetType="{x:Type CheckBox}">
		<Setter Property="Height"
						Value="40" />
		<Setter Property="HorizontalAlignment"
						Value="Left" />
		<Setter Property="Margin"
						Value="0,10" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Viewbox HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
						<Border Background="#01000000">
							<StackPanel Height="40"
													HorizontalAlignment="Left"
													Orientation="Horizontal">
								<TextBlock Grid.Column="1"
													 x:Name="content"
													 TextBlock.FontSize="34"
													 Margin="0,0,10,0"
													 Text="{TemplateBinding Content}"
													 Foreground="{TemplateBinding BorderBrush}" />
								<Border Width="40"
												x:Name="circle"
												Height="40"
												BorderBrush="{TemplateBinding BorderBrush}"
												Background="{StaticResource roundBlue2}"
												BorderThickness="3"
												CornerRadius="20" />
							</StackPanel>
						</Border>
					</Viewbox>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
										 Value="True">
							<Setter TargetName="circle"
											Property="Background"
											Value="{StaticResource roundBlue2}" />
							<Setter TargetName="circle"
											Property="Effect"
											Value="{StaticResource dropLime}" />
						</Trigger>
						<Trigger Property="IsChecked"
										 Value="False">
							<Setter TargetName="circle"
											Property="Background"
											Value="#01000000" />
							<Setter TargetName="circle"
											Property="Effect"
											Value="{StaticResource dropRed}" />
						</Trigger>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter TargetName="circle"
											Property="BorderBrush"
											Value="Lime" />
							<Setter TargetName="content"
											Property="Foreground"
											Value="Lime" />
							<Setter TargetName="circle"
											Property="Effect"
											Value="{StaticResource dropLime}" />
							<!--<Setter TargetName="content"
                                      Property="Effect"
                                      Value="{StaticResource dropLime}"/>
                              <Setter TargetName="circle"
                                      Property="Background"
                                      Value="{StaticResource roundBlue3}"/>-->
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="True" />
								<Condition Property="IsMouseOver"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="circle"
											Property="Background"
											Value="{StaticResource roundBlue3}" />
						</MultiTrigger>
						<!--<MultiTrigger>
                              <MultiTrigger.Conditions>
                                  <Condition Property="IsChecked"
                                              Value="False"/>
                                  <Condition Property="IsPressed"
                                              Value="True"/>
                              </MultiTrigger.Conditions>
                              <Setter TargetName="circle"
                                      Property="Background"
                                      Value="{StaticResource roundRed1}"/>
                          </MultiTrigger>-->
						<!--<MultiTrigger>
                              <MultiTrigger.Conditions>
                                  <Condition Property="IsChecked"
                                              Value="False"/>
                                  <Condition Property="IsMouseOver"
                                              Value="True"/>
                              </MultiTrigger.Conditions>
                              <Setter TargetName="circle"
                                      Property="Background"
                                      Value="{StaticResource roundRed3}"/>
                          </MultiTrigger>-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
													 Value="True" />
								<Condition Property="IsPressed"
													 Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="circle"
											Property="Background"
											Value="{StaticResource roundBlue1}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="Button_Command"
				 TargetType="{x:Type Button}">
		<Setter Property="FontSize"
						Value="20" />
		<Setter Property="Width"
						Value="auto" />
		<Setter Property="Height"
						Value="50" />
		<Setter Property="FontWeight"
						Value="Light" />
		<Setter Property="Foreground"
						Value="{StaticResource EnableBrush}" />
		<Setter Property="Background"
						Value="{StaticResource MenuBackground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Viewbox>
						<Border x:Name="outerBorder"
										Padding="0"
										Margin="5"
										BorderBrush="{TemplateBinding Foreground}"
										Width="{TemplateBinding Width}"
										BorderThickness="1"
										CornerRadius="14"
										Opacity="1"
										Background="{TemplateBinding Background}">
							<TextBlock x:Name="Conntent"
												 Margin="12,-2,12,2"
												 Foreground="{TemplateBinding Foreground}"
												 Text="{TemplateBinding Content}"
												 TextAlignment="Center" />
						</Border>
					</Viewbox>
					<ControlTemplate.Triggers>
						<Trigger  Property="IsMouseOver"
											Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropLime}"></Setter>
						</Trigger>
						<Trigger  Property="IsPressed"
											Value="True">
							<Setter Property="Effect"
											Value="{StaticResource dropBlue}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled"
							 Value="True">
				<Setter Property="Effect"
								Value="{StaticResource dropBlue}"></Setter>
			</Trigger>
			<Trigger Property="IsEnabled"
							 Value="False">
				<Setter Property="Effect"
								Value="{StaticResource dropBlack}"></Setter>
				<Setter Property="Foreground"
								Value="{StaticResource DisableBrush}" />
			</Trigger>
			<Trigger  Property="IsMouseOver"
								Value="True">
				<Setter Property="Opacity"
								Value="1"></Setter>
				<Setter Property="Effect"
								Value="{StaticResource dropLime}"></Setter>
			</Trigger>
			<Trigger  Property="IsPressed"
								Value="True">
				<Setter Property="Effect"
								Value="{StaticResource dropBlue}"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="TextBlockStyle1"
				 TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping"
						Value="NoWrap" />
		<Setter Property="TextTrimming"
						Value="None" />
		<Setter Property="Foreground"
						Value="{StaticResource EnableBrush}"></Setter>
		<Setter Property="FontSize"
						Value="32"></Setter>
		<Setter Property="Width"
						Value="165"></Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
							 Value="True">
				<Setter Property="Background"
								Value="Black"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<DataTemplate x:Key="OverlayIcon">
		<Grid Width="16"
					Height="16">
			<Ellipse Fill="Red"
							 Stroke="White"
							 StrokeThickness=".5" />
			<TextBlock Text="{Binding Counter}"
								 TextAlignment="Center"
								 Foreground="White"
								 FontWeight="Bold"
								 Height="16"
								 VerticalAlignment="Center"
								 FontSize="10" />
		</Grid>
	</DataTemplate>
	<Style x:Key="viewBox_Style"
				 TargetType="{x:Type Window}">
		<Style.Triggers>
			<Trigger Property="IsVisible"
							 Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Width"
															 Duration="{StaticResource animationTimeSlow}"
															 From="0"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ActiveStyle"
				 TargetType="{x:Type CheckBox}">
		<Setter Property="Background"
						Value="#01000000"></Setter>
		<Setter Property="Width"
						Value="40"></Setter>
		<Setter Property="Height"
						Value="40"></Setter>
		<Setter Property="IsChecked"
						Value="False"></Setter>
		<Setter Property="Foreground"
						Value="{StaticResource MenuBrush}"></Setter>
		<Setter Property="Effect"
						Value="{StaticResource dropBlack}"></Setter>
		<Setter Property="ToolTipService.Placement"
						Value="Bottom"></Setter>
		<Style.Triggers>
			<Trigger Property="IsChecked"
							 Value="False">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="Foreground.Color"
															To="{StaticResource MenuColor}"
															Duration="{StaticResource animationTimeFast}"></ColorAnimation>
							<DoubleAnimation Storyboard.TargetProperty="Background.Opacity"
															 To="0.01"
															 Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="Foreground.Color"
															To="{StaticResource PrimaryColor}"
															Duration="{StaticResource animationTimeFast}"></ColorAnimation>
							<DoubleAnimation Storyboard.TargetProperty="Background.Opacity"
															 To="1"
															 Duration="{StaticResource animationTimeFast}"></DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="IsMouseOver"
							 Value="True">
				<Setter Property="Effect"
								Value="{StaticResource dropBlue}"></Setter>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver"
										 Value="True"></Condition>
					<Condition Property="IsChecked"
										 Value="True"></Condition>
				</MultiTrigger.Conditions>
				<Setter Property="Effect"
								Value="{StaticResource dropLime}"></Setter>
			</MultiTrigger>
			<Trigger Property="IsPressed"
							 Value="True">
				<Setter Property="Effect"
								Value="{StaticResource dropBlack}"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>